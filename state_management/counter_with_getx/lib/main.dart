import 'package:counter_with_getx/app.dart';
import 'package:flutter/material.dart';

/*
State Management
1: kereksiz ui lardy kaira kurba
2: widget daraktaryna kaalagan jerine datany jetkirip beret
3: logic kodtordu ui kodtordon bolup aluu
*/

/*
Getx [MVC] -> model-view-controller (web)
Mobx [MVVM] -> model-voiew-view-model (mobile)
Bloc [Bloc pattern] -> okuibuz
*/
void main() {
  runApp(const MyApp());
}

// get
// 1. get менен иштөөдө биз биринчи get пакет курабыз.
// 2. БИР ЖЕРДЕ ТОПТОЛГОН ЛОГИКА МЕНЕН UIДЫ ЭКИ ПЕЙДЖКЕ АЖЫРАТАБЫЗ.(БУЛ ПРОГРАММИСТТЕРИДИН ЖУМУШУН ЖЕҢИЛДЕТҮҮ МАКСАТЫНДА).
// 3. Бир файл ачып GetxControllerден мурас алган бир класс түзөбүз. (GetxController get пакетиндеги state managerинен келет.)
// 4. Класстын ичине бир өзгөрмө түзөлү. 
// 5. Ал өзгөрүлмөбүз бир UIга таасир этсе анда өзгөрүлмөбүзгө .obs колдонобуз, ал эми өзгөрүлмөнүн тибине Rx кошумчалайбыз.
// 6. Ушул эле класска бир фукция түзөлү жана фукцияга өзгөрүлмөнүн аталышын берип кошуучу кылып койолу.
// 7. КОНТРОЛЛЕРИБИЗДИ UIДА ИШТЕТҮҮ ҮЧҮН UI ПЕЙДЖИНЕ КОНТРОЛЛЕР КЛАССЫБЫЗДЫ ЕКЗЕМПЛЯРЛАЙБЫЗ. CounterControllerибизди UI пейджке алып келген болобуз.
// 7.1. UIда колдоно турган жерлерибизге Оbx гана колдонобуз. san functionдорду беребиз.
// Get мени колдон кайсыл жерде өзгөрүү болсо ощол жерди Obxке ороп келген экземпляр барабарланган маани менен башкар.
// state managerдин негизги максатыниын бири ушул
// Obx деген бул класстын ичиндеги логиканы тыңшап турат жана ошого карап UIда курат.
// STATE MANAGERТИН ДАГЫ БИР ӨЗГӨЧӨЛҮГҮН КӨРӨЛҮ
// 8. БИРИНЧИ ПЕЙДЖТЕГИ ӨЗГӨРМӨ ӨЗГӨРҮЛГӨНДӨ ЭКИНЧИ ПЕЙДЖТЕ ДА ӨЗГӨРМӨ ӨЗГӨРҮЛСҮН. МИСАЛЫ 1 П 10 => 2 П 10
// 8.1 Экинчи бет файл создавай.
// 8.2. Экинчи бетте degrement Button ал эми биринчи бетте ingement Button болсун.
// 8.3.  
// Аргумент жана параметр деген эмне.
// 